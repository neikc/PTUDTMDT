@{
    ViewData["Title"] = "Cửa hàng";
}
@model PTUDTMDT.ViewModels.ShopViewModel.ShopIndexViewModel

<div class="container-fluid fruite py-5">
    <div class="container py-5">
        <!--Tiêu đề chính cửa cửa hàng-->
        <h1 class="mb-4">Cửa hàng trái cây sạch</h1>
        <!--Bắt đầu hàng thứ nhất với khoảng cách giữa các cột (g-4)-->
        <div class="row g-4">
            <div class="col-lg-12">
                <!--Hàng thứ hai với ô tìm kiếm và bộ lọc-->
                <div class="row g-4">
                    <div class="col-xl-3">
                        <!-- Nhóm ô tìm kiếm và biểu tượng kính lúp -->
                        <form asp-action="ShopIndex" method="get" class="input-group w-100 mx-auto d-flex">
                            <input type="search" name="searchTerm" class="form-control p-3" placeholder="Tìm kiếm sản phẩm" aria-describedby="search-icon-1">
                            <button type="submit" id="search-icon-1" class="input-group-text p-3">
                                <i class="fa fa-search"></i>
                            </button>
                            <!--Giữ lại các filter cần thiết-->
                            <input type="hidden" name="priceRangeMin" value="@Model.Filter.PriceRangeMin" />
                            <input type="hidden" name="priceRangeMax" value="@Model.Filter.PriceRangeMax" />
                            <input type="hidden" name="category" value="@Model.Filter.Category" />
                            <input type="hidden" name="sorting" value="@Model.Filter.Sorting" />
                        </form>

                    </div>

                    <!--Khoảng trống giữa các cột, chiếm 6 cột-->
                    <div class="col-6"></div>
                    <div class="col-xl-3">
                        <!--CÁC TÙY CHỌN SẮP XẾP THEO YÊU CẦU CỦA THẦY-->
                        <div class="bg-light ps-3 py-3 rounded d-flex justify-content-between mb-4">
                            <form method="get" action="/Shop/ShopIndex">
                                <label for="sorting">Sắp xếp:</label>
                                <select id="sorting" name="sorting" class="border-0 form-select-sm bg-light me-3" onchange="this.form.submit()">
                                    <option value="">Mặc định</option>
                                    <option value="name_asc">Tên A → Z</option>
                                    <option value="name_desc">Tên Z → A</option>
                                    <option value="price_asc">Giá tăng dần</option>
                                    <option value="price_desc">Giá giảm dần</option>
                                </select>
                                <!-- Giữ lại các giá trị lọc đã chọn (nếu có) -->
                                <input type="hidden" name="searchTerm" value="@Model.Filter.SearchTerm" />
                                <input type="hidden" name="priceRangeMin" value="@Model.Filter.PriceRangeMin" />
                                <input type="hidden" name="priceRangeMax" value="@Model.Filter.PriceRangeMax" />
                                <input type="hidden" name="category" value="@Model.Filter.Category" />
                            </form>
                        </div>


                    </div>
                </div>
                
                <div class="row g-4">
                    <!--THANH SIDEBAR-->
                    @await Html.PartialAsync("Components/Sidebar")
                    <!--KẾT THÚC THANH SIDEBAR-->
                    
                    <!--PHẦN HIỂN THỊ SẢN PHẨM CHÍNH-->
                    <div class="col-lg-9">
                        <div class="row g-4 justify-content-center">
                            @if (!Model.Products.Any())
                            {
                                <div class="text-center">
                                    <p>Không có sản phẩm nào TvT</p>
                                </div>
                            } else
                            {
                                @foreach (var product in Model.Products)
                                {
                                    <div class="col-md-6 col-lg-6 col-xl-4">
                                        <!--Dùng Flex để đẩy hình lên trên, phần mô tả xuống dưới để ô sản phẩm nhìn đẹp hơn-->
                                        <div class="rounded position-relative fruite-item border border-secondary d-flex flex-column justify-content-between">
                                            <div class="fruite-img">
                                                <a href="@Url.Action("ShopDetail", "Shop", new { MaSanPham = product.MaSanPham })">
                                                    <img src="@Url.Content(product.LayDiaChiHinh(1))" class="img-fluid w-100 rounded-top" style="max-height:305px; object-fit: contain" alt="@product.ShortDesc">
                                            </div>
                                            <div class="text-white bg-secondary px-3 py-1 rounded position-absolute" style="top: 10px; left: 10px;">@product.MaLoaiNavigation.TenLoai</div>
                                            <div class="p-4 mt-auto border-top-0 rounded-bottom">
                                                <h4>@product.TenSanPham</h4>
                                                <!--Nếu mô tả dài hơn 100 kí tự thì ẩn phần sau, chỉ để lại...-->
                                                <p>
                                                    @(product.MoTa.Length > 100 ? product.MoTa.Substring(0, 100) + "..." : product.ShortDesc)
                                                </p>
                                                <div class="d-flex justify-content-between align-items-end flex-lg-wrap">
                                                    <!--FormatPrice chuyển từ số sang định dạng tiền tệ, hàm này viết thêm trong Model Sanpham-->
                                                    <!-- Giá sản phẩm -->
                                                    <h5 class="fw-bold me-2">@product.FormatPrice(product.GiaSauGiam)</h5>
                                                    @if (product.GiaSanPham > product.GiaSauGiam)
                                                    {
                                                        <h5 class="text-danger">
                                                            <span class="text-decoration-line-through">@product.FormatPrice(product.GiaSanPham)</span>
                                                            (-@product.GiamGia%)
                                                        </h5> 
                                                    }
                                                </div>
                                                <a href="#" class="btn border border-secondary rounded-pill px-3 text-primary" style="margin-top: 5px"><i class="fa fa-shopping-bag me-2 text-primary"></i>Thêm vào giỏ hàng</a>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                            
                        </div>
                        
                        <!--PHẦN PHÂN TRANG CỦA DANH MỤC SẢN PHẨM-->
                        <div class="col-12">
                            <div class="pagination d-flex justify-content-center mt-5">
                                <!-- Nút về trang trước -->
                                <a href="@Url.Action("ShopIndex", new { page = Model.Products.PageNumber > 1 ? Model.Products.PageNumber - 1 : 1 })" class="rounded">«</a>

                                @{
                                    //Khởi tạo các biến: Tổng cộng các trang, trang hiện tại, trang bắt đầu, trang kết thúc
                                    int totalPages = Model.Products.PageCount;
                                    int currentPage = Model.Products.PageNumber;
                                    int startPage = Math.Max(1, currentPage - 2);
                                    int endPage = Math.Min(totalPages, startPage + 4);

                                    if (startPage > 1)
                                    {
                                        <a href="@Url.Action("ShopIndex", new { page = 1 })" class="rounded">1</a>
                                        if (startPage > 2)
                                        {
                                            <a href="#" class="rounded">...</a>
                                        }
                                    }

                                    for (int i = startPage; i <= endPage; i++)
                                    {
                                        if (i == currentPage)
                                        {
                                            <a href="#" class="active rounded">@i</a>
                                        }
                                        else
                                        {
                                            <a href="@Url.Action("ShopIndex", new { page = i })" class="rounded">@i</a>
                                        }
                                    }

                                    if (endPage < totalPages)
                                    {
                                        if (endPage < totalPages - 1)
                                        {
                                            <a href="#" class="rounded">...</a>
                                        }
                                        <a href="@Url.Action("ShopIndex", new { page = totalPages })" class="rounded">@totalPages</a>
                                    }
                                }

                                <!-- Nút đến trang tiếp theo -->
                                <a href="@Url.Action("ShopIndex", new { page = Model.Products.PageNumber < Model.Products.PageCount ? Model.Products.PageNumber + 1 : Model.Products.PageCount })" class="rounded">»</a>
                            </div>
                        </div>
                        <!--KẾT THÚC PHẦN PHÂN TRANG CỦA DANH MỤC SẢN PHẨM-->
                    
                    </div>
                    <!--KẾT THÚC PHẦN HIỂN THỊ SẢN PHẨM CHÍNH-->
                </div>

            </div>
        </div>
    </div>
</div>
